{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","api","setApi","pag","setPage","lang","setLang","starasc","setStarasc","nameasc","setNameasc","useEffect","sorts","orders","fetchData","a","axios","result","console","log","timer","setTimeout","clearTimeout","className","src","process","alt","id","placeholder","value","onChange","e","currentTarget","type","onClick","total_count","items","map","x","href","full_name","style","display","description","xmlns","width","height","fill","viewBox","d","stargazers_count","language","license","key","forks_count","color","Pagination","variant","shape","count","Math","ceil","page","event","window","scrollTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59267ddc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState(\"\");\r\n  const [api, setApi] = useState();\r\n  const [pag, setPage] = useState(1);\r\n  const [lang, setLang] = useState(null);\r\n  const [starasc, setStarasc] = useState(-1);\r\n\r\n  const [nameasc, setNameasc] = useState(-1);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sorts = null;\r\n    let orders = null;\r\n    if (nameasc !== -1) sorts = \"name\";\r\n    if (starasc !== -1) sorts = \"stars\";\r\n    if (starasc === 1 || nameasc === 1) orders = \"asc\";\r\n    if (starasc === 0 || nameasc === 0) orders = \"desc\";\r\n\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        `https://api.github.com/search/repositories?q=${data}+language:${lang}&sort=${sorts}&order=${orders}&page=${pag}`\r\n      );\r\n\r\n      /*  if (result && starasc === 1)\r\n        result.data.items.sort((a, b) =>\r\n          parseInt(a.stargazers_count) < parseInt(b.stargazers_count) ? 1 : -1\r\n        );\r\n      if (result && starasc === 1)\r\n        result.data.items.sort((a, b) =>\r\n          parseInt(a.stargazers_count) > parseInt(b.stargazers_count) ? -1 : 1\r\n        ); */\r\n      console.log(\r\n        `https://api.github.com/search/repositories?q=${data}+language:${lang}&sort=${sorts}&order=${orders}&page=${pag}`\r\n      );\r\n      console.log(result.data);\r\n      setApi(result.data);\r\n    };\r\n\r\n    const timer = setTimeout(() => {\r\n      fetchData();\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [data, pag, starasc, nameasc, lang]);\r\n\r\n  return (\r\n    <div className=\"grid grid-template-areas-1\">\r\n      <div className=\"nav\">\r\n        <img src={process.env.PUBLIC_URL + \"/github.png\"} alt=\"icon-github\" />\r\n        <input\r\n          id=\"search\"\r\n          placeholder=\"Search or jump to...\"\r\n          value={data}\r\n          onChange={(e) => setData(e.currentTarget.value)}\r\n        />\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (starasc === 1) setStarasc(-1);\r\n              else {\r\n                setStarasc(1);\r\n                setNameasc(-1);\r\n              }\r\n            }}\r\n          >\r\n            Sort by Star (Asc)\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (starasc === 0) setStarasc(-1);\r\n              else {\r\n                setStarasc(0);\r\n                setNameasc(-1);\r\n              }\r\n            }}\r\n          >\r\n            Sort by Star (Dsc)\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (nameasc === 1) setNameasc(-1);\r\n              else {\r\n                setNameasc(1);\r\n                setStarasc(-1);\r\n              }\r\n            }}\r\n          >\r\n            Sort by name (Asc)\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (nameasc === 0) setNameasc(-1);\r\n              else {\r\n                setNameasc(0);\r\n                setStarasc(-1);\r\n              }\r\n            }}\r\n          >\r\n            Sort by name (Dsc)\r\n          </button>\r\n\r\n          <input\r\n            id=\"searchlang\"\r\n            placeholder=\"filter by language...\"\r\n            value={lang}\r\n            onChange={(e) => setLang(e.currentTarget.value)}\r\n          />\r\n        </>\r\n      </div>\r\n      <div className=\"content\">\r\n        {api ? <h2>{api.total_count} repository results</h2> : null}\r\n        <ul>\r\n          {api\r\n            ? api.items.map((x) => (\r\n                <li key={x.id}>\r\n                  <a href={`https://github.com/${x.full_name}`}>\r\n                    <p style={{ display: \"flex\" }}>\r\n                      <img src={process.env.PUBLIC_URL + \"/12.png\"} />{\" \"}\r\n                      {x.full_name}\r\n                    </p>\r\n                  </a>\r\n\r\n                  <p className=\"lip\">{x.description}</p>\r\n                  <div className=\"lip list-itens\">\r\n                    <a href={`https://github.com/${x.full_name}/stargazers`}>\r\n                      <p>\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"16\"\r\n                          height=\"16\"\r\n                          fill=\"currentColor\"\r\n                          className=\"bi bi-star\"\r\n                          viewBox=\"0 0 16 16\"\r\n                        >\r\n                          <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\" />\r\n                        </svg>\r\n                        {x.stargazers_count}\r\n                      </p>\r\n                    </a>\r\n                    <p>{x.language}</p>\r\n                    <p>{x.license ? x.license.key : \"none\"} license </p>\r\n                    <a href={`https://github.com/${x.full_name}/issues`}>\r\n                      <p> Number of Forks: {x.forks_count}</p>\r\n                    </a>\r\n                  </div>\r\n                </li>\r\n              ))\r\n            : null}\r\n        </ul>\r\n        <div style={{ color: \"white\" }}>\r\n          {api ? (\r\n            <Pagination\r\n              className=\"pag\"\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n              count={Math.ceil(api.total_count / 30)}\r\n              page={pag}\r\n              onChange={handleChange}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}